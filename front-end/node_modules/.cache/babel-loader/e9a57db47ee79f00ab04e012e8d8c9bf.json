{"ast":null,"code":"const express = require(\"express\");\n\nconst app = express(); // const ejs = require(\"ejs\")\n\nconst mongoose = require(\"mongoose\");\n\nconst cors = require(\"cors\");\n\napp.use(express.static('public'));\napp.use(express.urlencoded({\n  extended: true\n})); //this line is to parse any information from forms\n\napp.use(cors());\napp.set('view engine', 'ejs');\nconst PORT = 4000;\nmain().catch(err => console.log(err));\n\nasync function main() {\n  await mongoose.connect('mongodb://localhost:27017/keeperDB');\n}\n\nconst notesSchema = new mongoose.Schema({\n  title: String,\n  content: String\n});\nconst Note = mongoose.model(\"Note\", notesSchema); // const note2 = new Note({\n//     title:\"day 3\", \n//     content:\"Hello there\"\n// })\n// note2.save()\n\napp.get(\"/api\", function (req, res) {\n  Note.find(function (err, results) {\n    if (err) {\n      console.log(err);\n    } else {\n      res.json(results); //   console.log(results)\n    }\n  });\n});\napp.listen(PORT, function () {\n  console.log(`Server started on port ${PORT}.`);\n});\nmodule.exports = Note;","map":{"version":3,"sources":["/Users/ryanlohyongrui/Documents/React.js/keeper-app/front-end/src/server.js"],"names":["express","require","app","mongoose","cors","use","static","urlencoded","extended","set","PORT","main","catch","err","console","log","connect","notesSchema","Schema","title","String","content","Note","model","get","req","res","find","results","json","listen","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB,C,CACA;;AACA,MAAMG,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEAC,GAAG,CAACG,GAAJ,CAAQL,OAAO,CAACM,MAAR,CAAe,QAAf,CAAR;AACAJ,GAAG,CAACG,GAAJ,CAAQL,OAAO,CAACO,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAnB,CAAR,E,CAA6C;;AAC7CN,GAAG,CAACG,GAAJ,CAAQD,IAAI,EAAZ;AACAF,GAAG,CAACO,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACA,MAAMC,IAAI,GAAG,IAAb;AAEAC,IAAI,GAAGC,KAAP,CAAaC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAApB;;AAEA,eAAeF,IAAf,GAAsB;AACpB,QAAMR,QAAQ,CAACa,OAAT,CAAiB,oCAAjB,CAAN;AACD;;AAED,MAAMC,WAAW,GAAG,IAAId,QAAQ,CAACe,MAAb,CAChB;AAACC,EAAAA,KAAK,EAACC,MAAP;AACAC,EAAAA,OAAO,EAACD;AADR,CADgB,CAApB;AAIA,MAAME,IAAI,GAAGnB,QAAQ,CAACoB,KAAT,CAAe,MAAf,EAAsBN,WAAtB,CAAb,C,CAEA;AACA;AACA;AACA;AACA;;AAGAf,GAAG,CAACsB,GAAJ,CAAQ,MAAR,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAkB;AAChCJ,EAAAA,IAAI,CAACK,IAAL,CAAU,UAASd,GAAT,EAAae,OAAb,EAAqB;AAC7B,QAAIf,GAAJ,EAAQ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAFD,MAEK;AACDa,MAAAA,GAAG,CAACG,IAAJ,CAASD,OAAT,EADC,CAEL;AACC;AACF,GAPD;AAQD,CATD;AAWA1B,GAAG,CAAC4B,MAAJ,CAAWpB,IAAX,EAAiB,YAAU;AACzBI,EAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBL,IAAK,GAA3C;AACD,CAFD;AAIAqB,MAAM,CAACC,OAAP,GAAiBV,IAAjB","sourcesContent":["const express = require(\"express\");\nconst app = express();\n// const ejs = require(\"ejs\")\nconst mongoose = require(\"mongoose\")\nconst cors = require(\"cors\")\n\napp.use(express.static('public'))\napp.use(express.urlencoded({extended:true})) //this line is to parse any information from forms\napp.use(cors())\napp.set('view engine', 'ejs')\nconst PORT = 4000\n\nmain().catch(err => console.log(err));\n\nasync function main() {\n  await mongoose.connect('mongodb://localhost:27017/keeperDB');\n}\n\nconst notesSchema = new mongoose.Schema(\n    {title:String,\n    content:String}\n)\nconst Note = mongoose.model(\"Note\",notesSchema)\n\n// const note2 = new Note({\n//     title:\"day 3\", \n//     content:\"Hello there\"\n// })\n// note2.save()\n\n\napp.get(\"/api\", function(req, res){\n  Note.find(function(err,results){\n    if (err){\n      console.log(err)\n    }else{\n        res.json(results)   \n    //   console.log(results)\n    }\n  })\n});\n\napp.listen(PORT, function(){\n  console.log(`Server started on port ${PORT}.`);\n});\n\nmodule.exports = Note"]},"metadata":{},"sourceType":"module"}