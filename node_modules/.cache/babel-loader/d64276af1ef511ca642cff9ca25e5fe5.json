{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FindOperation = void 0;\n\nconst operation_1 = require(\"./operation\");\n\nconst utils_1 = require(\"../utils\");\n\nconst error_1 = require(\"../error\");\n\nconst command_1 = require(\"./command\");\n\nconst sort_1 = require(\"../sort\");\n\nconst shared_1 = require(\"../cmap/wire_protocol/shared\");\n\nconst read_concern_1 = require(\"../read_concern\");\n\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n/** @internal */\n\nclass FindOperation extends command_1.CommandOperation {\n  constructor(collection, ns) {\n    let filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(collection, options);\n    this.options = options;\n    this.ns = ns;\n\n    if (typeof filter !== 'object' || Array.isArray(filter)) {\n      throw new error_1.MongoInvalidArgumentError('Query filter must be a plain object or ObjectId');\n    } // If the filter is a buffer, validate that is a valid BSON document\n\n\n    if (Buffer.isBuffer(filter)) {\n      const objectSize = filter[0] | filter[1] << 8 | filter[2] << 16 | filter[3] << 24;\n\n      if (objectSize !== filter.length) {\n        throw new error_1.MongoInvalidArgumentError(`Query filter raw message size does not match message header size [${filter.length}] != [${objectSize}]`);\n      }\n    } // special case passing in an ObjectId as a filter\n\n\n    this.filter = filter != null && filter._bsontype === 'ObjectID' ? {\n      _id: filter\n    } : filter;\n  }\n\n  execute(server, session, callback) {\n    this.server = server;\n    const serverWireVersion = (0, utils_1.maxWireVersion)(server);\n    const options = this.options;\n\n    if (options.allowDiskUse != null && serverWireVersion < 4) {\n      callback(new error_1.MongoCompatibilityError('Option \"allowDiskUse\" is not supported on MongoDB < 3.2'));\n      return;\n    }\n\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      callback(new error_1.MongoCompatibilityError(`Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`));\n      return;\n    }\n\n    if (serverWireVersion < 4) {\n      if (this.readConcern && this.readConcern.level !== 'local') {\n        callback(new error_1.MongoCompatibilityError(`Server find command does not support a readConcern level of ${this.readConcern.level}`));\n        return;\n      }\n\n      const findCommand = makeLegacyFindCommand(this.ns, this.filter, options);\n\n      if ((0, shared_1.isSharded)(server) && this.readPreference) {\n        findCommand.$readPreference = this.readPreference.toJSON();\n      }\n\n      server.query(this.ns, findCommand, { ...this.options,\n        ...this.bsonOptions,\n        documentsReturnedIn: 'firstBatch',\n        readPreference: this.readPreference\n      }, callback);\n      return;\n    }\n\n    let findCommand = makeFindCommand(this.ns, this.filter, options);\n\n    if (this.explain) {\n      findCommand = (0, utils_1.decorateWithExplain)(findCommand, this.explain);\n    }\n\n    server.command(this.ns, findCommand, { ...this.options,\n      ...this.bsonOptions,\n      documentsReturnedIn: 'firstBatch',\n      session\n    }, callback);\n  }\n\n}\n\nexports.FindOperation = FindOperation;\n\nfunction makeFindCommand(ns, filter, options) {\n  const findCommand = {\n    find: ns.collection,\n    filter\n  };\n\n  if (options.sort) {\n    findCommand.sort = (0, sort_1.formatSort)(options.sort);\n  }\n\n  if (options.projection) {\n    let projection = options.projection;\n\n    if (projection && Array.isArray(projection)) {\n      projection = projection.length ? projection.reduce((result, field) => {\n        result[field] = 1;\n        return result;\n      }, {}) : {\n        _id: 1\n      };\n    }\n\n    findCommand.projection = projection;\n  }\n\n  if (options.hint) {\n    findCommand.hint = (0, utils_1.normalizeHintField)(options.hint);\n  }\n\n  if (typeof options.skip === 'number') {\n    findCommand.skip = options.skip;\n  }\n\n  if (typeof options.limit === 'number') {\n    if (options.limit < 0) {\n      findCommand.limit = -options.limit;\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.limit = options.limit;\n    }\n  }\n\n  if (typeof options.batchSize === 'number') {\n    if (options.batchSize < 0) {\n      if (options.limit && options.limit !== 0 && Math.abs(options.batchSize) < Math.abs(options.limit)) {\n        findCommand.limit = -options.batchSize;\n      }\n\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.batchSize = options.batchSize;\n    }\n  }\n\n  if (typeof options.singleBatch === 'boolean') {\n    findCommand.singleBatch = options.singleBatch;\n  }\n\n  if (options.comment) {\n    findCommand.comment = options.comment;\n  }\n\n  if (typeof options.maxTimeMS === 'number') {\n    findCommand.maxTimeMS = options.maxTimeMS;\n  }\n\n  const readConcern = read_concern_1.ReadConcern.fromOptions(options);\n\n  if (readConcern) {\n    findCommand.readConcern = readConcern.toJSON();\n  }\n\n  if (options.max) {\n    findCommand.max = options.max;\n  }\n\n  if (options.min) {\n    findCommand.min = options.min;\n  }\n\n  if (typeof options.returnKey === 'boolean') {\n    findCommand.returnKey = options.returnKey;\n  }\n\n  if (typeof options.showRecordId === 'boolean') {\n    findCommand.showRecordId = options.showRecordId;\n  }\n\n  if (typeof options.tailable === 'boolean') {\n    findCommand.tailable = options.tailable;\n  }\n\n  if (typeof options.timeout === 'boolean') {\n    findCommand.noCursorTimeout = !options.timeout;\n  } else if (typeof options.noCursorTimeout === 'boolean') {\n    findCommand.noCursorTimeout = options.noCursorTimeout;\n  }\n\n  if (typeof options.awaitData === 'boolean') {\n    findCommand.awaitData = options.awaitData;\n  }\n\n  if (typeof options.allowPartialResults === 'boolean') {\n    findCommand.allowPartialResults = options.allowPartialResults;\n  }\n\n  if (options.collation) {\n    findCommand.collation = options.collation;\n  }\n\n  if (typeof options.allowDiskUse === 'boolean') {\n    findCommand.allowDiskUse = options.allowDiskUse;\n  }\n\n  if (options.let) {\n    findCommand.let = options.let;\n  }\n\n  return findCommand;\n}\n\nfunction makeLegacyFindCommand(ns, filter, options) {\n  const findCommand = {\n    $query: filter\n  };\n\n  if (options.sort) {\n    findCommand.$orderby = (0, sort_1.formatSort)(options.sort);\n  }\n\n  if (options.hint) {\n    findCommand.$hint = (0, utils_1.normalizeHintField)(options.hint);\n  }\n\n  if (typeof options.returnKey === 'boolean') {\n    findCommand.$returnKey = options.returnKey;\n  }\n\n  if (options.max) {\n    findCommand.$max = options.max;\n  }\n\n  if (options.min) {\n    findCommand.$min = options.min;\n  }\n\n  if (typeof options.showRecordId === 'boolean') {\n    findCommand.$showDiskLoc = options.showRecordId;\n  }\n\n  if (options.comment) {\n    findCommand.$comment = options.comment;\n  }\n\n  if (typeof options.maxTimeMS === 'number') {\n    findCommand.$maxTimeMS = options.maxTimeMS;\n  }\n\n  if (options.explain != null) {\n    findCommand.$explain = true;\n  }\n\n  return findCommand;\n}\n\n(0, operation_1.defineAspects)(FindOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.EXPLAINABLE, operation_1.Aspect.CURSOR_CREATING]);","map":{"version":3,"sources":["/Users/ryanlohyongrui/Documents/React.js/keeper-app/node_modules/mongodb/src/operations/find.ts"],"names":[],"mappings":"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","sourcesContent":["import { Aspect, defineAspects, Hint } from './operation';\nimport {\n  maxWireVersion,\n  MongoDBNamespace,\n  Callback,\n  normalizeHintField,\n  decorateWithExplain\n} from '../utils';\nimport { MongoInvalidArgumentError, MongoCompatibilityError } from '../error';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport { CommandOperation, CommandOperationOptions, CollationOptions } from './command';\nimport { Sort, formatSort } from '../sort';\nimport { isSharded } from '../cmap/wire_protocol/shared';\nimport { ReadConcern } from '../read_concern';\nimport type { ClientSession } from '../sessions';\n\n/**\n * @public\n * @typeParam TSchema - Unused schema definition, deprecated usage, only specify `FindOptions` with no generic\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface FindOptions<TSchema extends Document = Document> extends CommandOperationOptions {\n  /** Sets the limit of documents returned in the query. */\n  limit?: number;\n  /** Set to sort the documents coming back from the query. Array of indexes, `[['a', 1]]` etc. */\n  sort?: Sort;\n  /** The fields to return in the query. Object of fields to either include or exclude (one of, not both), `{'a':1, 'b': 1}` **or** `{'a': 0, 'b': 0}` */\n  projection?: Document;\n  /** Set to skip N documents ahead in your query (useful for pagination). */\n  skip?: number;\n  /** Tell the query to use specific indexes in the query. Object of indexes to use, `{'_id':1}` */\n  hint?: Hint;\n  /** Specify if the cursor can timeout. */\n  timeout?: boolean;\n  /** Specify if the cursor is tailable. */\n  tailable?: boolean;\n  /** Specify if the cursor is a a tailable-await cursor. Requires `tailable` to be true */\n  awaitData?: boolean;\n  /** Set the batchSize for the getMoreCommand when iterating over the query results. */\n  batchSize?: number;\n  /** If true, returns only the index keys in the resulting documents. */\n  returnKey?: boolean;\n  /** The inclusive lower bound for a specific index */\n  min?: Document;\n  /** The exclusive upper bound for a specific index */\n  max?: Document;\n  /** You can put a $comment field on a query to make looking in the profiler logs simpler. */\n  comment?: string | Document;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. Requires `tailable` and `awaitData` to be true */\n  maxAwaitTimeMS?: number;\n  /** The server normally times out idle cursors after an inactivity period (10 minutes) to prevent excess memory use. Set this option to prevent that. */\n  noCursorTimeout?: boolean;\n  /** Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields). */\n  collation?: CollationOptions;\n  /** Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher) */\n  allowDiskUse?: boolean;\n  /** Determines whether to close the cursor after the first batch. Defaults to false. */\n  singleBatch?: boolean;\n  /** For queries against a sharded collection, allows the command (or subsequent getMore commands) to return partial results, rather than an error, if one or more queried shards are unavailable. */\n  allowPartialResults?: boolean;\n  /** Determines whether to return the record identifier for each document. If true, adds a field $recordId to the returned documents. */\n  showRecordId?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n\n/** @internal */\nexport class FindOperation extends CommandOperation<Document> {\n  options: FindOptions;\n  filter: Document;\n\n  constructor(\n    collection: Collection | undefined,\n    ns: MongoDBNamespace,\n    filter: Document = {},\n    options: FindOptions = {}\n  ) {\n    super(collection, options);\n\n    this.options = options;\n    this.ns = ns;\n\n    if (typeof filter !== 'object' || Array.isArray(filter)) {\n      throw new MongoInvalidArgumentError('Query filter must be a plain object or ObjectId');\n    }\n\n    // If the filter is a buffer, validate that is a valid BSON document\n    if (Buffer.isBuffer(filter)) {\n      const objectSize = filter[0] | (filter[1] << 8) | (filter[2] << 16) | (filter[3] << 24);\n      if (objectSize !== filter.length) {\n        throw new MongoInvalidArgumentError(\n          `Query filter raw message size does not match message header size [${filter.length}] != [${objectSize}]`\n        );\n      }\n    }\n\n    // special case passing in an ObjectId as a filter\n    this.filter = filter != null && filter._bsontype === 'ObjectID' ? { _id: filter } : filter;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    this.server = server;\n\n    const serverWireVersion = maxWireVersion(server);\n    const options = this.options;\n    if (options.allowDiskUse != null && serverWireVersion < 4) {\n      callback(\n        new MongoCompatibilityError('Option \"allowDiskUse\" is not supported on MongoDB < 3.2')\n      );\n      return;\n    }\n\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      callback(\n        new MongoCompatibilityError(\n          `Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`\n        )\n      );\n\n      return;\n    }\n\n    if (serverWireVersion < 4) {\n      if (this.readConcern && this.readConcern.level !== 'local') {\n        callback(\n          new MongoCompatibilityError(\n            `Server find command does not support a readConcern level of ${this.readConcern.level}`\n          )\n        );\n\n        return;\n      }\n\n      const findCommand = makeLegacyFindCommand(this.ns, this.filter, options);\n      if (isSharded(server) && this.readPreference) {\n        findCommand.$readPreference = this.readPreference.toJSON();\n      }\n\n      server.query(\n        this.ns,\n        findCommand,\n        {\n          ...this.options,\n          ...this.bsonOptions,\n          documentsReturnedIn: 'firstBatch',\n          readPreference: this.readPreference\n        },\n        callback\n      );\n\n      return;\n    }\n\n    let findCommand = makeFindCommand(this.ns, this.filter, options);\n    if (this.explain) {\n      findCommand = decorateWithExplain(findCommand, this.explain);\n    }\n\n    server.command(\n      this.ns,\n      findCommand,\n      {\n        ...this.options,\n        ...this.bsonOptions,\n        documentsReturnedIn: 'firstBatch',\n        session\n      },\n      callback\n    );\n  }\n}\n\nfunction makeFindCommand(ns: MongoDBNamespace, filter: Document, options: FindOptions): Document {\n  const findCommand: Document = {\n    find: ns.collection,\n    filter\n  };\n\n  if (options.sort) {\n    findCommand.sort = formatSort(options.sort);\n  }\n\n  if (options.projection) {\n    let projection = options.projection;\n    if (projection && Array.isArray(projection)) {\n      projection = projection.length\n        ? projection.reduce((result, field) => {\n            result[field] = 1;\n            return result;\n          }, {})\n        : { _id: 1 };\n    }\n\n    findCommand.projection = projection;\n  }\n\n  if (options.hint) {\n    findCommand.hint = normalizeHintField(options.hint);\n  }\n\n  if (typeof options.skip === 'number') {\n    findCommand.skip = options.skip;\n  }\n\n  if (typeof options.limit === 'number') {\n    if (options.limit < 0) {\n      findCommand.limit = -options.limit;\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.limit = options.limit;\n    }\n  }\n\n  if (typeof options.batchSize === 'number') {\n    if (options.batchSize < 0) {\n      if (\n        options.limit &&\n        options.limit !== 0 &&\n        Math.abs(options.batchSize) < Math.abs(options.limit)\n      ) {\n        findCommand.limit = -options.batchSize;\n      }\n\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.batchSize = options.batchSize;\n    }\n  }\n\n  if (typeof options.singleBatch === 'boolean') {\n    findCommand.singleBatch = options.singleBatch;\n  }\n\n  if (options.comment) {\n    findCommand.comment = options.comment;\n  }\n\n  if (typeof options.maxTimeMS === 'number') {\n    findCommand.maxTimeMS = options.maxTimeMS;\n  }\n\n  const readConcern = ReadConcern.fromOptions(options);\n  if (readConcern) {\n    findCommand.readConcern = readConcern.toJSON();\n  }\n\n  if (options.max) {\n    findCommand.max = options.max;\n  }\n\n  if (options.min) {\n    findCommand.min = options.min;\n  }\n\n  if (typeof options.returnKey === 'boolean') {\n    findCommand.returnKey = options.returnKey;\n  }\n\n  if (typeof options.showRecordId === 'boolean') {\n    findCommand.showRecordId = options.showRecordId;\n  }\n\n  if (typeof options.tailable === 'boolean') {\n    findCommand.tailable = options.tailable;\n  }\n\n  if (typeof options.timeout === 'boolean') {\n    findCommand.noCursorTimeout = !options.timeout;\n  } else if (typeof options.noCursorTimeout === 'boolean') {\n    findCommand.noCursorTimeout = options.noCursorTimeout;\n  }\n\n  if (typeof options.awaitData === 'boolean') {\n    findCommand.awaitData = options.awaitData;\n  }\n\n  if (typeof options.allowPartialResults === 'boolean') {\n    findCommand.allowPartialResults = options.allowPartialResults;\n  }\n\n  if (options.collation) {\n    findCommand.collation = options.collation;\n  }\n\n  if (typeof options.allowDiskUse === 'boolean') {\n    findCommand.allowDiskUse = options.allowDiskUse;\n  }\n\n  if (options.let) {\n    findCommand.let = options.let;\n  }\n\n  return findCommand;\n}\n\nfunction makeLegacyFindCommand(\n  ns: MongoDBNamespace,\n  filter: Document,\n  options: FindOptions\n): Document {\n  const findCommand: Document = {\n    $query: filter\n  };\n\n  if (options.sort) {\n    findCommand.$orderby = formatSort(options.sort);\n  }\n\n  if (options.hint) {\n    findCommand.$hint = normalizeHintField(options.hint);\n  }\n\n  if (typeof options.returnKey === 'boolean') {\n    findCommand.$returnKey = options.returnKey;\n  }\n\n  if (options.max) {\n    findCommand.$max = options.max;\n  }\n\n  if (options.min) {\n    findCommand.$min = options.min;\n  }\n\n  if (typeof options.showRecordId === 'boolean') {\n    findCommand.$showDiskLoc = options.showRecordId;\n  }\n\n  if (options.comment) {\n    findCommand.$comment = options.comment;\n  }\n\n  if (typeof options.maxTimeMS === 'number') {\n    findCommand.$maxTimeMS = options.maxTimeMS;\n  }\n\n  if (options.explain != null) {\n    findCommand.$explain = true;\n  }\n\n  return findCommand;\n}\n\ndefineAspects(FindOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE,\n  Aspect.CURSOR_CREATING\n]);\n"]},"metadata":{},"sourceType":"script"}